{
    "name": "keybindings",
    "private": true,
    "displayName": "Zardoy Keybindings",
    "publisher": "zardoy",
    "version": "0.0.0-dev",
    "description": "My full list of opinionated keybindings",
    "repository": "https://github.com/zardoy/vscode-keybindings.git",
    "keywords": [
        "zardoy",
        "Zardoy",
        "zardoY",
        "keymap",
        "keybindings"
    ],
    "categories": [
        "Keymaps"
    ],
    "contributes": {
        "keybindings": [
            {
                "mac": "cmd+w",
                "win": "ctrl+w",
                "linux": "ctrl+w",
                "key": "ctrl+w",
                "command": "workbench.action.closeActiveEditor"
            },
            {
                "mac": "shift+cmd+[",
                "key": "shift+ctrl+[",
                "command": "workbench.action.previousEditor",
                "when": "!terminalFocus && !terminalTabsFocus"
            },
            {
                "mac": "shift+cmd+]",
                "key": "shift+ctrl+]",
                "command": "workbench.action.nextEditor",
                "when": "!terminalFocus && !terminalTabsFocus"
            },
            {
                "mac": "cmd+shift+d",
                "key": "ctrl+shift+d",
                "command": "editor.action.copyLinesDownAction",
                "when": "editorTextFocus"
            },
            {
                "mac": "cmd+k cmd+shift+d",
                "key": "ctrl+k ctrl+shift+d",
                "command": "editor.action.duplicateSelection",
                "when": "editorTextFocus"
            },
            {
                "mac": "alt+cmd+s",
                "key": "alt+ctrl+s",
                "command": "workbench.action.files.saveAll"
            },
            {
                "mac": "cmd+k cmd+b",
                "key": "ctrl+k ctrl+b",
                "command": "workbench.action.toggleSidebarVisibility"
            },
            {
                "mac": "cmd+k l",
                "key": "ctrl+k l",
                "command": "extension.changeCase.commands"
            },
            {
                "mac": "shift+alt+.",
                "key": "ctrl+alt+.",
                "command": "editor.action.smartSelect.expand",
                "when": "editorTextFocus"
            },
            {
                "mac": "shift+alt+,",
                "key": "ctrl+alt+,",
                "command": "editor.action.smartSelect.shrink",
                "when": "editorTextFocus"
            },
            {
                "mac": "shift+cmd+.",
                "key": "shift+ctrl+.",
                "command": "workbench.action.navigateForward"
            },
            {
                "mac": "shift+cmd+,",
                "key": "shift+ctrl+,",
                "command": "workbench.action.navigateBack"
            },
            {
                "mac": "cmd+n",
                "key": "ctrl+n",
                "command": "explorer.newFile"
            },
            {
                "mac": "cmd+k cmd+s",
                "key": "ctrl+k ctrl+s",
                "command": "workbench.action.files.saveWithoutFormatting"
            },
            {
                "mac": "cmd+s",
                "key": "ctrl+s",
                "command": "workbench.action.files.saveWithoutFormatting",
                "when": "config.saveWithoutFormatting"
            },
            {
                "mac": "cmd+k cmd+,",
                "key": "ctrl+k ctrl+,",
                "command": "workbench.action.openGlobalKeybindings"
            },
            {
                "mac": "shift+cmd+backspace",
                "key": "shift+ctrl+backspace",
                "command": "workbench.action.terminal.kill",
                "when": "terminalFocus || terminalTabsFocus"
            },
            {
                "mac": "shift+cmd+u",
                "key": "shift+ctrl+u",
                "command": "githubManager.openClonedGithubRepository"
            },
            {
                "mac": "cmd+; shift+cmd+u",
                "key": "ctrl+; shift+ctrl+u",
                "command": "githubManager.openGithubRepository"
            },
            {
                "mac": "cmd+alt+u",
                "key": "ctrl+alt+u",
                "command": "githubManager.openNonGitDirectory"
            },
            {
                "mac": "cmd+k cmd+alt+u",
                "key": "ctrl+k ctrl+alt+u",
                "command": "githubManager.openNonRemoteRepository"
            },
            {
                "mac": "cmd+; cmd+alt+u",
                "key": "ctrl+; ctrl+alt+u",
                "command": "remoteHub.openRepository"
            },
            {
                "key": "cmd+k cmd+/",
                "command": "editor.action.removeCommentLine",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "mac": "cmd+k shift+cmd+r",
                "key": "ctrl+k shift+ctrl+r",
                "command": "workbench.action.reloadWindow"
            },
            {
                "mac": "cmd+k cmd+e",
                "key": "ctrl+k ctrl+e",
                "command": "errorLens.toggle",
                "when": "editorTextFocus"
            },
            {
                "mac": "cmd+k o",
                "key": "ctrl+k o",
                "command": "notifications.clearAll"
            },
            {
                "mac": "ctrl+t",
                "key": "alt+t",
                "command": "extension.transpose"
            },
            {
                "mac": "cmd+k i",
                "key": "ctrl+k i",
                "command": "editor.action.showDefinitionPreviewHover"
            },
            {
                "key": "shift+alt+n",
                "command": "zardoyExperiments.goToNextProblemInFile",
                "args": [
                    false
                ]
            },
            {
                "key": "ctrl+k shift+alt+n",
                "mac": "cmd+k shift+alt+n",
                "command": "zardoyExperiments.goToNextProblemInFile",
                "args": [
                    true
                ]
            },
            {
                "key": "ctrl+; shift+alt+n",
                "mac": "cmd+; shift+alt+n",
                "command": "editor.action.marker.nextInFiles"
            },
            {
                "mac": "shift+cmd+[",
                "key": "shift+ctrl+[",
                "command": "workbench.action.terminal.focusPrevious",
                "when": "terminalFocus || terminalTabsFocus"
            },
            {
                "mac": "shift+cmd+]",
                "key": "shift+ctrl+]",
                "command": "workbench.action.terminal.focusNext",
                "when": "terminalFocus || terminalTabsFocus"
            },
            {
                "mac": "cmd+k cmd+u",
                "key": "ctrl+k ctrl+u",
                "command": "editor.action.transformToUppercase",
                "when": "editorTextFocus"
            },
            {
                "mac": "cmd+k cmd+l",
                "key": "ctrl+k ctrl+l",
                "command": "editor.action.transformToLowercase",
                "when": "editorTextFocus"
            },
            {
                "mac": "cmd+alt+/",
                "key": "shift+ctrl+/",
                "command": "editor.action.blockComment",
                "when": "editorTextFocus"
            },
            {
                "key": "shift+ctrl+enter",
                "command": "zardoyExperiments.fixedTerminalMaximize",
                "when": "terminalFocus && !panelMaximized"
            },
            {
                "mac": "shift+cmd+enter",
                "key": "shift+ctrl+enter",
                "command": "workbench.action.toggleMaximizedPanel",
                "when": "panelFocus"
            },
            {
                "mac": "cmd+k n",
                "key": "ctrl+k n",
                "command": "commands.run",
                "args": [
                    "workbench.files.action.collapseExplorerFolders",
                    "workbench.files.action.showActiveFileInExplorer",
                    "workbench.action.focusActiveEditorGroup"
                ]
            },
            {
                "mac": "cmd+; n",
                "key": "ctrl+; n",
                "command": "workbench.files.action.collapseExplorerFolders"
            },
            {
                "mac": "cmd+k e",
                "key": "ctrl+k e",
                "command": "workbench.action.showEditorsInActiveGroup"
            },
            {
                "mac": "cmd+y",
                "key": "ctrl+y",
                "command": "editor.action.revealDefinition",
                "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
            },
            {
                "mac": "cmd+k cmd+y",
                "key": "ctrl+k ctrl+y",
                "command": "editor.action.referenceSearch.trigger",
                "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
            },
            {
                "key": "ctrl+k shift+ctrl+y",
                "mac": "cmd+k shift+cmd+y",
                "command": "editor.action.peekTypeDefinition",
                "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
            },
            {
                "mac": "alt+escape",
                "key": "ctrl+i",
                "command": "editor.action.triggerParameterHints",
                "when": "editorHasSignatureHelpProvider && editorTextFocus"
            },
            {
                "mac": "cmd+k shift+cmd+u",
                "key": "ctrl+k shift+ctrl+u",
                "command": "workbench.action.output.toggleOutput",
                "when": "workbench.panel.output.active"
            },
            {
                "mac": "shift+cmd+r",
                "key": "shift+alt+r",
                "command": "revealFileInOS",
                "when": "editorTextFocus || filesExplorerFocus"
            },
            {
                "mac": "cmd+k shift+cmd+e",
                "key": "ctrl+k shift+ctrl+e",
                "command": "errorLens.toggleWarning"
            },
            {
                "mac": "cmd+k cmd+'",
                "win": "ctrl+k ctrl+'",
                "command": "editor.togglequotes"
            },
            {
                "key": "alt+1",
                "command": "workbench.action.focusFirstEditorGroup"
            },
            {
                "key": "alt+2",
                "command": "workbench.action.focusSecondEditorGroup"
            },
            {
                "key": "alt+3",
                "command": "workbench.action.focusThirdEditorGroup"
            },
            {
                "mac": "cmd+1",
                "key": "ctrl+1",
                "command": "surround.with",
                "when": "editorHasSelection"
            },
            {
                "mac": "cmd+shift+1",
                "key": "ctrl+shift+1",
                "command": "zardoyExperiments.fixedSurroundIf",
                "when": "editorTextFocus"
            },
            {
                "key": "shift+ctrl+i",
                "mac": "shift+cmd+i",
                "command": "eslint.executeAutofix",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+; shift+ctrl+r",
                "mac": "cmd+; shift+cmd+r",
                "command": "typescript.restartTsServer"
            },
            {
                "key": "alt+g",
                "mac": "cmd+g",
                "command": "workbench.view.scm",
                "when": "workbench.scm.active"
            },
            {
                "win": "f2",
                "command": "renameFile"
            },
            {
                "key": "ctrl+k b",
                "mac": "cmd+k b",
                "command": "editor.emmet.action.removeTag"
            },
            {
                "key": "ctrl+k h",
                "mac": "cmd+k h",
                "command": "zardoyExperiments.insertTag"
            },
            {
                "key": "alt+down",
                "command": "workbench.action.compareEditor.nextChange",
                "when": "textCompareEditorVisible"
            },
            {
                "key": "alt+up",
                "command": "workbench.action.compareEditor.previousChange",
                "when": "textCompareEditorVisible"
            },
            {
                "key": "ctrl+r",
                "mac": "cmd+r",
                "command": "workbench.action.reloadWindow",
                "when": "isDevelopment"
            },
            {
                "win": "alt+right",
                "command": "cursorEnd",
                "when": "editorTextFocus"
            },
            {
                "win": "alt+left",
                "command": "cursorHome",
                "when": "editorTextFocus"
            },
            {
                "win": "shift+alt+left",
                "command": "cursorHomeSelect",
                "when": "textInputFocus"
            },
            {
                "win": "shift+alt+right",
                "command": "cursorEndSelect",
                "when": "textInputFocus"
            },
            {
                "key": "ctrl+k s",
                "mac": "cmd+k s",
                "command": "npmRapidReady.runMainNpmScript"
            },
            {
                "key": "ctrl+g",
                "command": "extraCommands.goToLine"
            },
            {
                "key": "ctrl+k shift+ctrl+,",
                "mac": "cmd+k shift+cmd+,",
                "command": "workbench.action.openSettingsJson"
            },
            {
                "key": "shift+ctrl+r",
                "mac": "shift+cmd+r",
                "command": "npmRapidReady.runNpmScript"
            },
            {
                "key": "alt+\\",
                "mac": "ctrl+\\",
                "command": "runActiveDevelopmentCommand"
            },
            {
                "key": "ctrl+alt+\\",
                "mac": "alt+cmd+\\",
                "command": "focusActiveDevelopmentExtensionOutput"
            },
            {
                "key": "alt+o",
                "mac": "cmd+o",
                "command": "notifications.focusToasts"
            },
            {
                "key": "ctrl+k ctrl+shift+x",
                "mac": "cmd+k cmd+shift+x",
                "command": "workbench.extensions.action.showInstalledExtensions"
            },
            {
                "key": "ctrl+k p",
                "mac": "cmd+k p",
                "command": "npmRapidReady.openClosestPackageJson"
            },
            {
                "mac": "cmd+u",
                "key": "ctrl+u",
                "command": "workbench.action.focusPanel",
                "when": "!panelFocus"
            },
            {
                "mac": "cmd+u",
                "key": "ctrl+u",
                "command": "workbench.action.focusActiveEditorGroup",
                "when": "panelFocus"
            },
            {
                "mac": "cmd+j",
                "key": "ctrl+j",
                "command": "workbench.action.terminal.toggleTerminal"
            },
            {
                "mac": "shift+cmd+j",
                "key": "shift+ctrl+j",
                "command": "workbench.action.togglePanel",
                "when": "panelVisible"
            },
            {
                "mac": "shift+cmd+j",
                "key": "shift+ctrl+j",
                "command": "extraCommands.togglePanelVisibility",
                "when": "!panelVisible"
            },
            {
                "key": "ctrl+\\",
                "mac": "cmd+\\",
                "command": "zardoyExperiments.addImport"
            },
            {
                "key": "ctrl+k shift+ctrl+j",
                "mac": "cmd+k shift+cmd+j",
                "command": "npmRapidReady.removePackages"
            },
            {
                "key": "ctrl+alt+j",
                "mac": "cmd+alt+j",
                "command": "npmRapidReady.addPackages"
            },
            {
                "mac": "cmd+; p",
                "key": "ctrl+; p",
                "command": "git.push"
            },
            {
                "mac": "cmd+; g",
                "key": "ctrl+; g",
                "command": "remoteHub.goToRepository",
                "when": "isWeb"
            },
            {
                "mac": "cmd+; g",
                "key": "ctrl+; g",
                "command": "gitlens.openRepoOnRemote"
            },
            {
                "mac": "cmd+; s",
                "key": "ctrl+; s",
                "command": "git.sync"
            },
            {
                "win": "alt+w",
                "linux": "alt+w",
                "command": "workbench.action.switchWindow"
            },
            {
                "mac": "cmd+k cmd+alt+,",
                "key": "ctrl+k ctrl+alt+,",
                "command": "workbench.action.openGlobalKeybindingsFile"
            },
            {
                "mac": "cmd+; d",
                "key": "ctrl+; d",
                "command": "git.cleanAll"
            },
            {
                "mac": "cmd+; shift+d",
                "key": "ctrl+; shift+d",
                "command": "git.cleanAllTracked"
            },
            {
                "mac": "cmd+; cmd+d",
                "key": "ctrl+; ctrl+d",
                "command": "editor.action.moveSelectionToPreviousFindMatch"
            },
            {
                "mac": "cmd+k shift+d",
                "key": "ctrl+k shift+d",
                "command": "editor.action.addSelectionToPreviousFindMatch"
            },
            {
                "mac": "cmd+k shift+d",
                "key": "ctrl+k shift+d",
                "command": "editor.action.addSelectionToPreviousFindMatch"
            },
            {
                "mac": "cmd+; r",
                "key": "ctrl+; r",
                "command": "git.openChange"
            },
            {
                "mac": "cmd+; shift+r",
                "key": "ctrl+; shift+r",
                "command": "git.openFile"
            },
            {
                "mac": "cmd+; u",
                "key": "ctrl+; u",
                "command": "git.stageSelectedRanges",
                "when": "editorTextFocus"
            },
            {
                "mac": "cmd+; u",
                "key": "ctrl+; u",
                "command": "git.stageSelectedRanges",
                "when": "editorTextFocus"
            },
            {
                "mac": "cmd+; shift+u",
                "key": "ctrl+; shift+u",
                "command": "git.unstageSelectedRanges",
                "when": "editorTextFocus"
            },
            {
                "mac": "cmd+; c",
                "key": "ctrl+; c",
                "command": "commands.run",
                "args": [
                    "zardoyExperiments.ensureGitUser",
                    "workbench.view.scm",
                    "git.commit"
                ]
            },
            {
                "mac": "cmd+; shift+c",
                "key": "ctrl+; shift+c",
                "command": "git.stageAllTracked"
            },
            {
                "mac": "cmd+; shift+g",
                "key": "ctrl+; shift+g",
                "command": "git.checkout"
            },
            {
                "mac": "cmd+; shift+t",
                "key": "ctrl+; shift+t",
                "command": "toggle.diff.renderSideBySide"
            },
            {
                "mac": "cmd+; 1",
                "key": "ctrl+; 1",
                "command": "toggle",
                "when": "editorTextFocus",
                "args": {
                    "id": "returnInlayHints",
                    "value": [
                        {
                            "typescript.inlayHints.functionLikeReturnTypes.enabled": true
                        },
                        {
                            "typescript.inlayHints.functionLikeReturnTypes.enabled": false
                        }
                    ]
                }
            },
            {
                "mac": "cmd+; shift+alt+u",
                "key": "ctrl+; shift+alt+u",
                "command": "git.revertSelectedRanges"
            },
            {
                "mac": "cmd+; cmd+h",
                "key": "ctrl+; ctrl+h",
                "command": "git-graph.view"
            },
            {
                "mac": "cmd+k cmd+m",
                "key": "ctrl+k ctrl+m",
                "command": "extension.search"
            },
            {
                "mac": "cmd+k cmd+n",
                "key": "ctrl+k ctrl+n",
                "command": "fileutils.newFileAtRoot"
            },
            {
                "key": "tab",
                "command": "zardoyExperiments.tab",
                "when": "editorTextFocus && !inSnippetMode"
            },
            {
                "mac": "ctrl+backspace",
                "command": "deleteRight",
                "when": "editorTextFocus"
            },
            {
                "mac": "ctrl+backspace",
                "key": "alt+delete",
                "command": "extraCommands.removeSurroundingCharacter",
                "when": "editorTextFocus && editorHasSelection"
            },
            {
                "mac": "cmd+backspace",
                "key": "alt+backspace",
                "command": "extraCommands.deleteAllLeftAfterIndent",
                "when": "editorTextFocus"
            },
            {
                "key": "shift+alt+o",
                "command": "zardoyExperiments.removeUnusedImports",
                "when": "editorTextFocus"
            },
            {
                "mac": "shift+cmd+;",
                "key": "shift+ctrl+;",
                "when": "editorTextFocus",
                "command": "zardoyExperiments.nextLetterSwapCase"
            },
            {
                "key": "f12",
                "when": "editorTextFocus",
                "command": "editor.action.marker.next"
            },
            {
                "key": "f11",
                "when": "editorTextFocus",
                "command": "editor.action.marker.prev"
            },
            {
                "key": "ctrl+7",
                "mac": "cmd+7",
                "command": "zardoyExperiments.insertAutoCompletions",
                "args": {
                    "kind": "prop",
                    "snippetType": "each",
                    "includeOptional": false
                },
                "when": "editorTextFocus"
            },
            {
                "key": "shift+ctrl+7",
                "mac": "shift+cmd+7",
                "command": "zardoyExperiments.insertAutoCompletions",
                "args": {
                    "kind": "prop",
                    "snippetType": "each",
                    "includeOptional": true
                },
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+8",
                "mac": "cmd+8",
                "command": "zardoyExperiments.insertCompletions",
                "when": "editorTextFocus"
            },
            {
                "key": "shift+ctrl+8",
                "mac": "shift+cmd+8",
                "command": "zardoyExperiments.insertAutoCompletions",
                "args": {
                    "destruct": true,
                    "includeOptional": true
                },
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+4",
                "mac": "cmd+4",
                "command": "editor.action.insertSnippet",
                "args": {
                    "snippet": "$TM_FILENAME_BASE"
                },
                "when": "editorTextFocus"
            },
            {
                "key": "shift+ctrl+4",
                "mac": "shift+alt+4",
                "command": "zardoyExperiments.copyFileName"
            },
            {
                "key": "shift+ctrl+c",
                "mac": "shift+cmd+c",
                "when": "editorTextFocus",
                "command": "zardoyExperiments.copyLineVariableName"
            },
            {
                "key": "ctrl+; shift+ctrl+c",
                "mac": "cmd+; shift+cmd+c",
                "command": "copyFilePath"
            },
            {
                "key": "alt+ctrl+c",
                "mac": "alt+cmd+c",
                "command": "copyRelativeFilePath"
            },
            {
                "key": "ctrl+k shift+ctrl+c",
                "mac": "cmd+k shift+cmd+c",
                "command": "workbench.action.terminal.openNativeConsole"
            },
            {
                "mac": "cmd+r",
                "key": "ctrl+r",
                "command": "editor.action.rename",
                "when": "editorTextFocus && isWeb"
            },
            {
                "key": "ctrl+r",
                "mac": "cmd+r",
                "command": "zardoyExperiments.reactAwareRename",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+; v",
                "mac": "cmd+; v",
                "command": "commitMsg.autofill"
            },
            {
                "key": "ctrl+k ctrl+alt+l",
                "mac": "cmd+k cmd+alt+l",
                "command": "extension.changeCase.camel"
            },
            {
                "key": "ctrl+k ctrl+shift+l",
                "mac": "cmd+k cmd+shift+l",
                "command": "commands.run",
                "args": [
                    "extension.changeCase.no",
                    {
                        "delay": 50,
                        "command": "extension.changeCase.title"
                    }
                ]
            },
            {
                "key": "shift+enter",
                "command": "commands.run",
                "args": [
                    "extension.commaEnter",
                    "editor.action.triggerSuggest"
                ],
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+shift+\\",
                "mac": "shift+cmd+\\",
                "command": "zardoyExperiments.goToMatchingTagOrPair",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+'",
                "mac": "cmd+'",
                "command": "findJump.activate"
            },
            {
                "key": "ctrl+; i",
                "mac": "cmd+; i",
                "command": "npmRapidReady.runInstall"
            },
            {
                "key": "ctrl+alt+n",
                "command": "terminalCodeRunner.runFile"
            },
            {
                "key": "ctrl+; ctrl+r",
                "mac": "cmd+; cmd+r",
                "command": "extraCommands.renameSymbolAndFile"
            },
            {
                "key": "ctrl+; ctrl+w",
                "mac": "cmd+; cmd+w",
                "command": "zardoyExperiments.openFileInWebstorm"
            },
            {
                "key": "ctrl+v",
                "mac": "cmd+v",
                "command": "zardoyExperiments.fixedPaste",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+k ctrl+v",
                "mac": "cmd+k cmd+v",
                "command": "zardoyExperiments.focusLastPasteRange",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+; ctrl+v",
                "mac": "cmd+; cmd+v",
                "command": "editor.action.clipboardPasteAction",
                "when": "editorTextFocus"
            },
            {
                "key": "shift+alt+up",
                "command": "editor.emmet.action.incrementNumberByOne"
            },
            {
                "key": "shift+alt+down",
                "command": "editor.emmet.action.decrementNumberByOne"
            },
            {
                "key": "shift+ctrl+c",
                "mac": "shift+cmd+c",
                "when": "editorTextFocus && editorHasSelection",
                "command": "commands.run",
                "args": [
                    "expandLineSelection",
                    "editor.action.clipboardCopyAction"
                ]
            },
            {
                "key": "ctrl+alt+x",
                "mac": "shift+alt+x",
                "when": "editorTextFocus && editorHasSelection",
                "command": "commands.run",
                "args": [
                    "expandLineSelection",
                    "editor.action.clipboardCutAction"
                ]
            },
            {
                "key": "shift+ctrl+'",
                "mac": "shift+cmd+'",
                "command": "breadcrumbs.focus",
                "when": "breadcrumbsPossible"
            },
            {
                "key": "ctrl+shift+alt+.",
                "mac": "ctrl+shift+cmd+.",
                "command": "cursorWordPartRightSelect"
            },
            {
                "key": "ctrl+shift+alt+,",
                "mac": "ctrl+shift+cmd+,",
                "command": "cursorWordPartLeftSelect"
            },
            {
                "key": "ctrl+shift+alt+backspace",
                "mac": "ctrl+shift+cmd+backspace",
                "command": "deleteWordPartLeft"
            },
            {
                "key": "ctrl+shift+alt+delete",
                "mac": "ctrl+shift+alt+backspace",
                "command": "deleteWordPartRight"
            },
            {
                "key": "shift+ctrl+v",
                "mac": "shift+cmd+v",
                "command": "abracadabra.extract",
                "when": "editorTextFocus && editorLangId != 'markdown'"
            },
            {
                "key": "ctrl+k shift+n",
                "mac": "mac+k shift+n",
                "command": "workbench.action.files.newUntitledFile"
            },
            {
                "key": "ctrl+alt+`",
                "mac": "shift+alt+`",
                "command": "npmRapidReady.runBinCommand"
            },
            {
                "win": "ctrl+alt+t",
                "linux": "ctrl+alt+t",
                "command": "workbench.action.closeOtherEditors"
            },
            {
                "key": "alt+v",
                "mac": "ctrl+v",
                "command": "bracketeer.selectBracketContent"
            },
            {
                "key": "ctrl+alt+backspace",
                "mac": "cmd+alt+backspace",
                "command": "bracketeer.removeBrackets"
            },
            {
                "key": "shift+alt+w",
                "command": "toggleFindWholeWord",
                "when": "editorFocus"
            },
            {
                "key": "shift+alt+w",
                "command": "toggleSearchEditorWholeWord",
                "when": "inSearchEditor"
            },
            {
                "key": "alt+shift+w",
                "command": "toggleSearchWholeWord",
                "when": "searchViewletFocus"
            },
            {
                "key": "alt+shift+c",
                "command": "toggleSearchCaseSensitive",
                "when": "searchViewletFocus"
            },
            {
                "key": "alt+shift+c",
                "command": "toggleFindCaseSensitive",
                "when": "editorFocus"
            },
            {
                "key": "alt+shift+c",
                "command": "toggleSearchEditorCaseSensitive",
                "when": "inSearchEditor"
            },
            {
                "key": "alt+r",
                "mac": "cmd+alt+r",
                "command": "toggleSearchEditorRegex",
                "when": "inSearchEditor"
            },
            {
                "key": "ctrl+; ctrl+g",
                "mac": "cmd+; cmd+g",
                "command": "npmRapidReady.openPackageRepository"
            },
            {
                "key": "ctrl+-",
                "mac": "cmd+-",
                "command": "editor.fold"
            },
            {
                "key": "ctrl+=",
                "mac": "cmd+=",
                "command": "editor.unfold"
            },
            {
                "key": "shift+ctrl+g h",
                "mac": "shift+cmd+g h",
                "command": "gitlens.showQuickFileHistory"
            },
            {
                "key": "shift+ctrl+g w",
                "mac": "shift+cmd+g w",
                "command": "git.closeAllDiffEditors"
            },
            {
                "key": "shift+ctrl+g c",
                "mac": "shift+cmd+g c",
                "command": "gitlens.copyRemoteFileUrlToClipboard"
            },
            {
                "key": "shift+ctrl+g o",
                "mac": "shift+cmd+g o",
                "command": "gitlens.openFileOnRemote"
            },
            {
                "key": "shift+ctrl+g p",
                "mac": "shift+cmd+g p",
                "command": "vscode-github.browserSimplePullRequest"
            },
            {
                "key": "ctrl+; shift+alt+c",
                "mac": "cmd+; shift+alt+c",
                "command": "zardoyExperiments.copyCurrentWorkspacePath"
            },
            {
                "key": "ctrl+k shift+ctrl+o",
                "mac": "cmd+k shift+cmd+o",
                "command": "outline.focus"
            },
            {
                "key": "ctrl+; b",
                "mac": "cmd+; b",
                "command": "gistpad.openGist"
            },
            {
                "key": "shift+ctrl+g n",
                "mac": "shift+cmd+g n",
                "command": "gitlens.copyCurrentBranch"
            },
            {
                "key": "shift+ctrl+g y",
                "mac": "shift+cmd+g y",
                "command": "git.showOutput"
            },
            {
                "key": "ctrl+k shift+s",
                "mac": "cmd+k shift+s",
                "command": "search.action.openNewEditor"
            },
            {
                "key": "ctrl+k ctrl+alt+backspace",
                "mac": "cmd+k cmd+alt+backspace",
                "command": "bracketeer.removeQuotes"
            },
            {
                "key": "alt+x",
                "mac": "cltr+x",
                "command": "bracketeer.selectQuotesContent"
            },
            {
                "key": "alt+.",
                "command": "editor.action.insertSnippet",
                "when": "editorFocus",
                "args": {
                    "snippet": "..."
                }
            },
            {
                "key": "alt+t",
                "command": "editorLangId =~ /javascript|javascriptreact|vue/ && editor.action.insertSnippet",
                "when": "editorFocus",
                "args": {
                    "snippet": "/** @type {$1} */"
                }
            },
            {
                "command": "githubManager.forceOpenInTheSameWindow",
                "when": "github-manager.inQuickPick",
                "key": "ctrl+o",
                "mac": "cmd+o"
            }
        ]
    },
    "galleryBanner": {
        "color": "#bf9800",
        "theme": "dark"
    },
    "engines": {
        "vscode": "^1.60.0"
    },
    "qna": false,
    "author": "Vitaly Turovsky <vital2580@icloud.com>",
    "license": "MIT",
    "devDependencies": {
        "@types/vscode": "^1.60.0",
        "typed-jsonfile": "^0.2.0",
        "modify-json-file": "^1.2.2"
    },
    "dependencies": {}
}
